/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zhub.servicemaster.internalFrames;

import com.zhub.servicemaster.accounts.CreateAccounts;
import com.zhub.servicemaster.data.SystemData;
import com.zhub.servicemaster.dialogs.ConfirmationDialog;
import com.zhub.servicemaster.dialogs.InformationDialog;
import com.zhub.servicemaster.forms.MainFrame;
import com.zhub.servicemaster.guiFunctions.ButtonFunctions;
import com.zhub.servicemaster.keys.KeyCodeFunctions;
import com.zhub.servicemaster.models.Address;
import com.zhub.servicemaster.models.BusinessAddress;
import com.zhub.servicemaster.models.BusinessAddressId;
import com.zhub.servicemaster.models.BusinessPartner;
import com.zhub.servicemaster.models.BusinessTelephone;
import com.zhub.servicemaster.models.BusinessTelephoneId;
import com.zhub.servicemaster.models.TelephoneNumber;
import com.zhub.servicemaster.utils.HibernateUtil;
import com.zhub.servicemaster.views.AddressView;
import com.zhub.servicemaster.views.BusinessPatnerView;
import com.zhub.servicemaster.views.TelephoneNumeberView;
import java.util.Date;
import java.util.List;
import java.util.Set;
import org.hibernate.Hibernate;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author RuwanM
 */
public class BusinessPartnerFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form BussinesPatnerFrame
     */
    public BusinessPartnerFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtBussinesPatnerCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtNic = new javax.swing.JTextField();
        calBirthDay = new com.toedter.calendar.JDateChooser();
        cbxCustomer = new javax.swing.JCheckBox();
        cbxSupplier = new javax.swing.JCheckBox();
        cbxEmployee = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAddressLine1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTelephoneNumber = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        txtAddressLine3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbxIsActive = new javax.swing.JCheckBox();
        btnReset = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnCodeSerach = new javax.swing.JButton();
        btnFirstNameSearch = new javax.swing.JButton();
        btnLastNameSearch = new javax.swing.JButton();
        btnNicSearch = new javax.swing.JButton();
        btnAddressSearch = new javax.swing.JButton();
        btnTelephoneNumberSearch = new javax.swing.JButton();

        jCheckBox3.setText("jCheckBox1");

        setTitle("Bussines Partner");

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setText("Bus. patner code :");

        txtBussinesPatnerCode.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel2.setText("First name :");

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel3.setText("Last name :");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setText("NIC :");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel5.setText("Birth day :");

        txtFirstName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtLastName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtNic.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        calBirthDay.setDate(new Date());
        calBirthDay.setDateFormatString("yyyy-MM-dd");
        calBirthDay.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        cbxCustomer.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cbxCustomer.setText("Customer");

        cbxSupplier.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cbxSupplier.setText("Supplier");

        cbxEmployee.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        cbxEmployee.setText("Employee");

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("Remark :");

        txtRemark.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("Address :");

        txtAddressLine1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setText("Tele. Number :");

        txtTelephoneNumber.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtAddressLine2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtAddressLine3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel9.setText("Is Active :");

        cbxIsActive.setSelected(true);

        btnReset.setBackground(new java.awt.Color(150, 255, 150));
        btnReset.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnReset.setContentAreaFilled(false);
        btnReset.setOpaque(true);
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnResetMouseExited(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(150, 255, 150));
        btnSave.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnSave.setContentAreaFilled(false);
        btnSave.setOpaque(true);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(150, 255, 150));
        btnClose.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnClose.setContentAreaFilled(false);
        btnClose.setOpaque(true);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnCodeSerach.setBackground(new java.awt.Color(150, 255, 150));
        btnCodeSerach.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnCodeSerach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnCodeSerach.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnCodeSerach.setContentAreaFilled(false);
        btnCodeSerach.setOpaque(true);
        btnCodeSerach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCodeSerachMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCodeSerachMouseExited(evt);
            }
        });
        btnCodeSerach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodeSerachActionPerformed(evt);
            }
        });

        btnFirstNameSearch.setBackground(new java.awt.Color(150, 255, 150));
        btnFirstNameSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnFirstNameSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnFirstNameSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnFirstNameSearch.setContentAreaFilled(false);
        btnFirstNameSearch.setOpaque(true);
        btnFirstNameSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnFirstNameSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnFirstNameSearchMouseExited(evt);
            }
        });
        btnFirstNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstNameSearchActionPerformed(evt);
            }
        });

        btnLastNameSearch.setBackground(new java.awt.Color(150, 255, 150));
        btnLastNameSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnLastNameSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnLastNameSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnLastNameSearch.setContentAreaFilled(false);
        btnLastNameSearch.setOpaque(true);
        btnLastNameSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLastNameSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLastNameSearchMouseExited(evt);
            }
        });
        btnLastNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastNameSearchActionPerformed(evt);
            }
        });

        btnNicSearch.setBackground(new java.awt.Color(150, 255, 150));
        btnNicSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnNicSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnNicSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnNicSearch.setContentAreaFilled(false);
        btnNicSearch.setOpaque(true);
        btnNicSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNicSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNicSearchMouseExited(evt);
            }
        });
        btnNicSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNicSearchActionPerformed(evt);
            }
        });

        btnAddressSearch.setBackground(new java.awt.Color(150, 255, 150));
        btnAddressSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnAddressSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnAddressSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnAddressSearch.setContentAreaFilled(false);
        btnAddressSearch.setOpaque(true);
        btnAddressSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddressSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddressSearchMouseExited(evt);
            }
        });
        btnAddressSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddressSearchActionPerformed(evt);
            }
        });

        btnTelephoneNumberSearch.setBackground(new java.awt.Color(150, 255, 150));
        btnTelephoneNumberSearch.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnTelephoneNumberSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnTelephoneNumberSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnTelephoneNumberSearch.setContentAreaFilled(false);
        btnTelephoneNumberSearch.setOpaque(true);
        btnTelephoneNumberSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTelephoneNumberSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTelephoneNumberSearchMouseExited(evt);
            }
        });
        btnTelephoneNumberSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelephoneNumberSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnTelephoneNumberSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddressLine3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(btnAddressSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtAddressLine2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtBussinesPatnerCode, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(btnCodeSerach, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4)
                                        .addComponent(btnFirstNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbxCustomer)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbxSupplier)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbxEmployee))
                                    .addComponent(calBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtNic, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLastName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(btnLastNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnNicSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxIsActive)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {calBirthDay, txtRemark});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtAddressLine1, txtBussinesPatnerCode, txtFirstName, txtLastName, txtNic, txtTelephoneNumber});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClose, btnReset, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtBussinesPatnerCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCodeSerach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFirstNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLastNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNic, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNicSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCustomer)
                    .addComponent(cbxSupplier)
                    .addComponent(cbxEmployee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAddressSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAddressLine3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(btnTelephoneNumberSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbxIsActive))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {calBirthDay, jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9, txtAddressLine1, txtBussinesPatnerCode, txtFirstName, txtLastName, txtNic, txtRemark, txtTelephoneNumber});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClose, btnReset, btnSave});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveOrUpdateBisnussPatner(String strBusinessPatnerCode, boolean bUpdate) {
        Date date = new Date();

        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction transaction = session.beginTransaction();

        BusinessPartner businessPartner = new BusinessPartner();
        businessPartner.setBusinessPartnerCode(strBusinessPatnerCode);
        businessPartner.setFirstName(txtFirstName.getText().trim().toUpperCase());
        businessPartner.setLastName(txtLastName.getText().trim().toUpperCase());
        businessPartner.setNic(txtNic.getText().trim().toUpperCase());
        businessPartner.setBirthDay(calBirthDay.getDate());
        businessPartner.setIsCustomer(cbxCustomer.isSelected());
        businessPartner.setIsSupplier(cbxSupplier.isSelected());
        businessPartner.setIsEmployee(cbxEmployee.isSelected());
        businessPartner.setIsActive(cbxIsActive.isSelected() ? 1 : 0);
        businessPartner.setRemarks(txtRemark.getText().trim());
        if (bUpdate) {
            businessPartner.setModifiedDate(date);
            businessPartner.setModifiedTime(date);
            businessPartner.setModifiedUser(MainFrame.user.getUserId());
        } else {
            businessPartner.setCreatedDate(date);
            businessPartner.setCreatedTime(date);
            businessPartner.setCreatedUser(MainFrame.user.getUserId());
        }

        session.saveOrUpdate(businessPartner);

        Address address = new Address();
        address.setAddressCode(txtAddressLine1.getText().split("-")[0].trim());
        address.setAdressLine1(txtAddressLine1.getText().split("-")[1].trim().toUpperCase());
        address.setAdressLine2(txtAddressLine2.getText().trim().toUpperCase());
        address.setAdressLine3(txtAddressLine3.getText().trim().toUpperCase());
        if (bUpdate) {
            address.setModifiedDate(date);
            address.setModifiedTime(date);
            address.setModifiedUser(MainFrame.user.getUserId());
        } else {
            address.setCreatedDate(date);
            address.setCreatedTime(date);
            address.setCreatedUser(MainFrame.user.getUserId());
        }

        BusinessAddressId businessAddressId = new BusinessAddressId(txtAddressLine1.getText().split("-")[0].trim(), strBusinessPatnerCode);
        BusinessAddress businessAddress = new BusinessAddress(businessAddressId, address, businessPartner);

        session.saveOrUpdate(businessAddress);

        TelephoneNumber telephoneNumber = new TelephoneNumber();
        telephoneNumber.setTelephoneNumberCode(txtTelephoneNumber.getText().split("-")[0].trim());
        telephoneNumber.setTelephoneNumber(txtTelephoneNumber.getText().split("-")[1].trim());
        if (bUpdate) {
            telephoneNumber.setModifiedDate(date);
            telephoneNumber.setModifiedTime(date);
            telephoneNumber.setModifiedUser(MainFrame.user.getUserId());
        } else {
            telephoneNumber.setCreatedDate(date);
            telephoneNumber.setCreatedTime(date);
            telephoneNumber.setCreatedUser(MainFrame.user.getUserId());
        }

        BusinessTelephoneId businessTelephoneId = new BusinessTelephoneId(txtTelephoneNumber.getText().split("-")[0].trim(), strBusinessPatnerCode);
        BusinessTelephone businessTelephone = new BusinessTelephone(businessTelephoneId, businessPartner, telephoneNumber);

        session.saveOrUpdate(businessTelephone);

        transaction.commit();
        session.close();
        
        CreateAccounts createAccounts = new CreateAccounts();
        if (cbxCustomer.isSelected()) {
            createAccounts.createBusnessPartnerDrAccount(businessPartner);
        }
        if (cbxSupplier.isSelected()) {
            createAccounts.createBusnessPartnerCrAccount(businessPartner);
        }

        if (bUpdate) {
            InformationDialog.showMessageBox(SystemData.RECORD_UPDATED_MESSAGE, SystemData.RECORD_UPDATED_HEADING, this);
        } else {
            InformationDialog.showMessageBox(SystemData.NEW_RECORD_ADDED_MESSAGE, SystemData.NEW_RECORD_ADDED_HEADING, this);
        }
        this.clearAll();
    }

    private void btnResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnResetMouseEntered

    private void btnResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnResetMouseExited

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        this.clearAll();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();

            if (txtBussinesPatnerCode.getText().trim().isEmpty()) {
                List busisessPartners = getBusinessPatnerByNic(txtNic.getText().trim(), false);
                if (busisessPartners.isEmpty() || txtNic.getText().trim().isEmpty()) {
                    KeyCodeFunctions keyCodeFunctions = new KeyCodeFunctions();
                    this.saveOrUpdateBisnussPatner(keyCodeFunctions.getKey("BPT", "Business partner code"), false);
                } else {
                    InformationDialog.showMessageBox("Customer already exists", "Exist", this);
                }
            } else {
                List busisessPartners = getBusinessPatnerByCode(txtBussinesPatnerCode.getText().trim(), false);
                if (busisessPartners.isEmpty()) {
                    InformationDialog.showMessageBox("Invalid Business Patner code. Please try again", "Invalid", this);
                } else {
                    ConfirmationDialog.showMessageBox("Do you want to update?", "Update", this);
                    if (ConfirmationDialog.option == ConfirmationDialog.YES_OPTION) {
                        this.saveOrUpdateBisnussPatner(txtBussinesPatnerCode.getText().trim(), true);
                    }
                }
            }
//        }

        session.getTransaction().commit();
        session.close();

        this.clearAll();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnCloseMouseEntered

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnCloseMouseExited

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnCodeSerachMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCodeSerachMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnCodeSerachMouseEntered

    private void btnCodeSerachMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCodeSerachMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnCodeSerachMouseExited

    private void btnCodeSerachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodeSerachActionPerformed
        String businessPatnerCode = txtBussinesPatnerCode.getText().trim();
        List businessPartners = getBusinessPatnerByCode(businessPatnerCode, true);

        if (!businessPartners.isEmpty()) {
            BusinessPatnerView businessPatnerView = new BusinessPatnerView(businessPartners, this);
            MainFrame.desktopPane.add(businessPatnerView);
            businessPatnerView.setVisible(true);
        }
    }//GEN-LAST:event_btnCodeSerachActionPerformed

    private void btnFirstNameSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirstNameSearchMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnFirstNameSearchMouseEntered

    private void btnFirstNameSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFirstNameSearchMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnFirstNameSearchMouseExited

    private void btnFirstNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstNameSearchActionPerformed
        String firstName = txtFirstName.getText().trim();
        List businessPartners = getBusinessPatnerByFirstName(firstName, true);

        if (!businessPartners.isEmpty()) {
            BusinessPatnerView businessPatnerView = new BusinessPatnerView(businessPartners, this);
            MainFrame.desktopPane.add(businessPatnerView);
            businessPatnerView.setVisible(true);
        }
    }//GEN-LAST:event_btnFirstNameSearchActionPerformed

    private void btnLastNameSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLastNameSearchMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnLastNameSearchMouseEntered

    private void btnLastNameSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLastNameSearchMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnLastNameSearchMouseExited

    private void btnLastNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastNameSearchActionPerformed
        String lastName = txtLastName.getText().trim();
        List businessPartners = getBusinessPatnerByLastName(lastName, true);

        if (!businessPartners.isEmpty()) {
            BusinessPatnerView businessPatnerView = new BusinessPatnerView(businessPartners, this);
            MainFrame.desktopPane.add(businessPatnerView);
            businessPatnerView.setVisible(true);
        }
    }//GEN-LAST:event_btnLastNameSearchActionPerformed

    private void btnNicSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNicSearchMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnNicSearchMouseEntered

    private void btnNicSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNicSearchMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnNicSearchMouseExited

    private void btnNicSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNicSearchActionPerformed
        String nic = txtNic.getText().trim();
        List businessPartners = getBusinessPatnerByNic(nic, true);

        if (!businessPartners.isEmpty()) {
            BusinessPatnerView businessPatnerView = new BusinessPatnerView(businessPartners, this);
            MainFrame.desktopPane.add(businessPatnerView);
            businessPatnerView.setVisible(true);
        }
    }//GEN-LAST:event_btnNicSearchActionPerformed

    private void btnAddressSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddressSearchMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnAddressSearchMouseEntered

    private void btnAddressSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddressSearchMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnAddressSearchMouseExited

    private void btnAddressSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddressSearchActionPerformed
        String addressLine1 = txtAddressLine1.getText().trim();
        if (addressLine1.isEmpty() || addressLine1.split("-").length == 2) {
            List addresses = getAddressByCode(addressLine1.split("-")[0].trim(), true);

            if (!addresses.isEmpty()) {
                AddressView addressView = new AddressView(addresses, this);
                MainFrame.desktopPane.add(addressView);
                addressView.setVisible(true);
            }
        } else {
            List addresses = getAddressByLine1(addressLine1, true);

            if (!addresses.isEmpty()) {
                AddressView addressView = new AddressView(addresses, this);
                MainFrame.desktopPane.add(addressView);
                addressView.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnAddressSearchActionPerformed

    private void btnTelephoneNumberSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTelephoneNumberSearchMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnTelephoneNumberSearchMouseEntered

    private void btnTelephoneNumberSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTelephoneNumberSearchMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnTelephoneNumberSearchMouseExited

    private void btnTelephoneNumberSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelephoneNumberSearchActionPerformed
        String telephoneNumber = txtTelephoneNumber.getText().trim();
        if (telephoneNumber.isEmpty() || telephoneNumber.split("-").length == 2) {
            List telephoneNumbers = getTelephoneByCode(telephoneNumber.split("-")[0].trim(), true);

            if (!telephoneNumbers.isEmpty()) {
                TelephoneNumeberView telephoneNumeberView = new TelephoneNumeberView(telephoneNumbers, this);
                MainFrame.desktopPane.add(telephoneNumeberView);
                telephoneNumeberView.setVisible(true);
            }
        } else {
            List telephoneNumbers = getTelephoneByNumber(telephoneNumber, true);

            if (!telephoneNumbers.isEmpty()) {
                TelephoneNumeberView telephoneNumeberView = new TelephoneNumeberView(telephoneNumbers, this);
                MainFrame.desktopPane.add(telephoneNumeberView);
                telephoneNumeberView.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnTelephoneNumberSearchActionPerformed

    public void setBusinessPatnerCode(String businessPartnerCode) {
        txtBussinesPatnerCode.setText(businessPartnerCode);
    }

    public void setFirstName(String firstName) {
        txtFirstName.setText(firstName);
    }

    public void setLastName(String lastName) {
        txtLastName.setText(lastName);
    }

    public void setNic(String nic) {
        txtNic.setText(nic);
    }

    public void setBirthDay(Date birthDay) {
        this.calBirthDay.setDate(birthDay);
    }

    public void setIsCustomer(boolean isCustomer) {
        cbxCustomer.setSelected(isCustomer);
    }

    public void setIsSupplier(boolean isSupplier) {
        cbxSupplier.setSelected(isSupplier);
    }

    public void setIsEmployee(boolean isEmployee) {
        cbxEmployee.setSelected(isEmployee);
    }

    public void setRemark(String remark) {
        txtRemark.setText(remark);
    }

    public void setIsActive(boolean isActive) {
        cbxIsActive.setSelected(isActive);
    }

    public void setAddressLine1(String addressLine1) {
        txtAddressLine1.setText(addressLine1);
    }

    public void setAddressLine2(String addressLine2) {
        txtAddressLine2.setText(addressLine2);
    }

    public void setAddressLine3(String addressLine3) {
        txtAddressLine3.setText(addressLine3);
    }

    public void setTelephoneNumber(String telephoneNumber) {
        txtTelephoneNumber.setText(telephoneNumber);
    }

    public void setBusinessPatnerCodeEditable(boolean editable) {
        txtBussinesPatnerCode.setEditable(editable);
    }

    public void setNicEditable(boolean editable) {
        txtNic.setEditable(editable);
    }

    public void setBtnSaveText(String text) {
        this.btnSave.setText(text);
    }

    private List getBusinessPatnerByCode(String businessPatnerCode, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.businessPartnerCode like :code");
            query.setParameter("code", "%" + businessPatnerCode + "%");
        } else {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.businessPartnerCode = :code");
            query.setParameter("code", businessPatnerCode);
        }
        List list = query.list();
        for (Object object : list) {
            if (object instanceof BusinessPartner) {
                BusinessPartner businessPartner = (BusinessPartner) object;
                Hibernate.initialize(businessPartner.getBusinessAddresses());
                Hibernate.initialize(businessPartner.getBusinessTelephones());

                Set addresses = businessPartner.getBusinessAddresses();
                for (Object tempAddresse : addresses) {
                    if (tempAddresse instanceof BusinessAddress) {
                        BusinessAddress businessAddress = (BusinessAddress) tempAddresse;
                        Hibernate.initialize(businessAddress.getAddress());
                    }
                }

                Set businessTelephone = businessPartner.getBusinessTelephones();
                for (Object tempTelephone : businessTelephone) {
                    if (tempTelephone instanceof BusinessTelephone) {
                        BusinessTelephone telephone = (BusinessTelephone) tempTelephone;
                        Hibernate.initialize(telephone.getTelephoneNumber());
                    }
                }
            }
        }
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getBusinessPatnerByNic(String nic, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.nic like :nic");
            query.setParameter("nic", "%" + nic + "%");
        } else {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.nic = :nic");
            query.setParameter("nic", nic);
        }
        List list = query.list();
        for (Object object : list) {
            if (object instanceof BusinessPartner) {
                BusinessPartner businessPartner = (BusinessPartner) object;
                Hibernate.initialize(businessPartner.getBusinessAddresses());
                Hibernate.initialize(businessPartner.getBusinessTelephones());

                Set addresses = businessPartner.getBusinessAddresses();
                for (Object tempAddresse : addresses) {
                    if (tempAddresse instanceof BusinessAddress) {
                        BusinessAddress businessAddress = (BusinessAddress) tempAddresse;
                        Hibernate.initialize(businessAddress.getAddress());
                    }
                }

                Set businessTelephone = businessPartner.getBusinessTelephones();
                for (Object tempTelephone : businessTelephone) {
                    if (tempTelephone instanceof BusinessTelephone) {
                        BusinessTelephone telephone = (BusinessTelephone) tempTelephone;
                        Hibernate.initialize(telephone.getTelephoneNumber());
                    }
                }
            }
        }
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getBusinessPatnerByFirstName(String businessPatnerFirstName, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.firstName like :name");
            query.setParameter("name", "%" + businessPatnerFirstName + "%");
        } else {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.firstName = :name");
            query.setParameter("name", businessPatnerFirstName);
        }
        List list = query.list();
        for (Object object : list) {
            if (object instanceof BusinessPartner) {
                BusinessPartner businessPartner = (BusinessPartner) object;
                Hibernate.initialize(businessPartner.getBusinessAddresses());
                Hibernate.initialize(businessPartner.getBusinessTelephones());

                Set addresses = businessPartner.getBusinessAddresses();
                for (Object tempAddresse : addresses) {
                    if (tempAddresse instanceof BusinessAddress) {
                        BusinessAddress businessAddress = (BusinessAddress) tempAddresse;
                        Hibernate.initialize(businessAddress.getAddress());
                    }
                }

                Set businessTelephone = businessPartner.getBusinessTelephones();
                for (Object tempTelephone : businessTelephone) {
                    if (tempTelephone instanceof BusinessTelephone) {
                        BusinessTelephone telephone = (BusinessTelephone) tempTelephone;
                        Hibernate.initialize(telephone.getTelephoneNumber());
                    }
                }
            }
        }
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getBusinessPatnerByLastName(String businessPatnerLastName, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.lastName like :name");
            query.setParameter("name", "%" + businessPatnerLastName + "%");
        } else {
            query = session.createQuery("from BusinessPartner b join fetch b.businessAddresses join fetch b.businessTelephones where b.lastName = :name");
            query.setParameter("name", businessPatnerLastName);
        }
        List list = query.list();
        for (Object object : list) {
            if (object instanceof BusinessPartner) {
                BusinessPartner businessPartner = (BusinessPartner) object;
                Hibernate.initialize(businessPartner.getBusinessAddresses());
                Hibernate.initialize(businessPartner.getBusinessTelephones());

                Set addresses = businessPartner.getBusinessAddresses();
                for (Object tempAddresse : addresses) {
                    if (tempAddresse instanceof BusinessAddress) {
                        BusinessAddress businessAddress = (BusinessAddress) tempAddresse;
                        Hibernate.initialize(businessAddress.getAddress());
                    }
                }

                Set businessTelephone = businessPartner.getBusinessTelephones();
                for (Object tempTelephone : businessTelephone) {
                    if (tempTelephone instanceof BusinessTelephone) {
                        BusinessTelephone telephone = (BusinessTelephone) tempTelephone;
                        Hibernate.initialize(telephone.getTelephoneNumber());
                    }
                }
            }
        }
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getAddressByCode(String addressCode, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from Address a where a.addressCode like :code");
            query.setParameter("code", "%" + addressCode + "%");
        } else {
            query = session.createQuery("from Address a where a.addressCode = :code");
            query.setParameter("code", addressCode);
        }
        List list = query.list();
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getAddressByLine1(String addressName, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from Address a where a.adressLine1 like :name");
            query.setParameter("name", "%" + addressName + "%");
        } else {
            query = session.createQuery("from Address a where a.adressLine1 = :name");
            query.setParameter("name", addressName);
        }
        List list = query.list();
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getTelephoneByCode(String telephoneCode, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from TelephoneNumber t where t.telephoneNumberCode like :code");
            query.setParameter("code", "%" + telephoneCode + "%");
        } else {
            query = session.createQuery("from TelephoneNumber t where t.telephoneNumberCode = :code");
            query.setParameter("code", telephoneCode);
        }
        List list = query.list();
        session.getTransaction().commit();
        session.close();
        return list;
    }

    private List getTelephoneByNumber(String telephoneNumber, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query;
        if (like) {
            query = session.createQuery("from TelephoneNumber t where t.telephoneNumber like :name");
            query.setParameter("name", "%" + telephoneNumber + "%");
        } else {
            query = session.createQuery("from TelephoneNumber t where t.telephoneNumber = :name");
            query.setParameter("name", telephoneNumber);
        }
        List list = query.list();
        session.getTransaction().commit();
        session.close();
        return list;
    }

    public void clearAll() {
        txtBussinesPatnerCode.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtNic.setText("");
        calBirthDay.setDate(new Date());
        cbxCustomer.setSelected(false);
        cbxSupplier.setSelected(false);
        cbxEmployee.setSelected(false);
        txtRemark.setText("");
        txtAddressLine1.setText("");
        txtAddressLine2.setText("");
        txtAddressLine3.setText("");
        txtTelephoneNumber.setText("");
        cbxIsActive.setSelected(true);
        txtBussinesPatnerCode.setEditable(true);
        txtNic.setEditable(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddressSearch;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCodeSerach;
    private javax.swing.JButton btnFirstNameSearch;
    private javax.swing.JButton btnLastNameSearch;
    private javax.swing.JButton btnNicSearch;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTelephoneNumberSearch;
    private com.toedter.calendar.JDateChooser calBirthDay;
    private javax.swing.JCheckBox cbxCustomer;
    private javax.swing.JCheckBox cbxEmployee;
    private javax.swing.JCheckBox cbxIsActive;
    private javax.swing.JCheckBox cbxSupplier;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtAddressLine3;
    private javax.swing.JTextField txtBussinesPatnerCode;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtNic;
    private javax.swing.JTextField txtRemark;
    private javax.swing.JTextField txtTelephoneNumber;
    // End of variables declaration//GEN-END:variables
}

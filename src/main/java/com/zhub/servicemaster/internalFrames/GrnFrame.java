/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zhub.servicemaster.internalFrames;

import com.zhub.servicemaster.data.SystemData;
import com.zhub.servicemaster.dialogs.ConfirmationDialog;
import com.zhub.servicemaster.dialogs.InformationDialog;
import com.zhub.servicemaster.forms.MainFrame;
import com.zhub.servicemaster.functions.AutoCompletion;
import com.zhub.servicemaster.guiFunctions.ButtonFunctions;
import com.zhub.servicemaster.keys.KeyCodeFunctions;
import com.zhub.servicemaster.models.BusinessPartner;
import com.zhub.servicemaster.models.Grn;
import com.zhub.servicemaster.models.GrnLine;
import com.zhub.servicemaster.models.Item;
import com.zhub.servicemaster.models.Stock;
import com.zhub.servicemaster.models.StockStatus;
import com.zhub.servicemaster.models.Uom;
import com.zhub.servicemaster.models.UomConversion;
import com.zhub.servicemaster.utils.HibernateUtil;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

/**
 *
 * @author RuwanM
 */
public class GrnFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form GrnFrame
     */
    public GrnFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grnDetailsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtGrnReference = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        dateGrnDate = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        cmbSupplier = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtDeliveredBy = new javax.swing.JTextField();
        txtGrandSubTotal = new javax.swing.JFormattedTextField();
        txtGrandDiscount = new javax.swing.JFormattedTextField();
        txtGrandTotal = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnCodeSerach = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        grnItemDetailsPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cmbItems = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtUnitPrice = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JFormattedTextField();
        btnAdd = new javax.swing.JButton();
        lblUom = new javax.swing.JLabel();
        addedItemsPanel = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        tblGrnItems = new javax.swing.JTable();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("GRN");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        grnDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)), "GRN Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel1.setText("GRN Reference :");

        txtGrnReference.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel2.setText("GRN Date :");

        dateGrnDate.setDate(new Date());
        dateGrnDate.setDateFormatString("yyyy-MM-dd");
        dateGrnDate.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel3.setText("Supplier :");

        cmbSupplier.setEditable(true);
        cmbSupplier.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel4.setText("Delivered By :");

        txtDeliveredBy.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtGrandSubTotal.setEditable(false);
        txtGrandSubTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtGrandSubTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtGrandSubTotal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtGrandSubTotal.setText("0.00");
        txtGrandSubTotal.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtGrandDiscount.setEditable(false);
        txtGrandDiscount.setBackground(new java.awt.Color(255, 255, 255));
        txtGrandDiscount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtGrandDiscount.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtGrandDiscount.setText("0.00");
        txtGrandDiscount.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        txtGrandTotal.setEditable(false);
        txtGrandTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtGrandTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtGrandTotal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtGrandTotal.setText("0.00");
        txtGrandTotal.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel10.setText("Sub Total :");

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel11.setText("Discount :");

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel12.setText("Grand Total :");

        btnCodeSerach.setBackground(new java.awt.Color(150, 255, 150));
        btnCodeSerach.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnCodeSerach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btnCodeSerach.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnCodeSerach.setContentAreaFilled(false);
        btnCodeSerach.setOpaque(true);
        btnCodeSerach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCodeSerachMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCodeSerachMouseExited(evt);
            }
        });
        btnCodeSerach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodeSerachActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel13.setText("Remark :");

        txtRemark.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        javax.swing.GroupLayout grnDetailsPanelLayout = new javax.swing.GroupLayout(grnDetailsPanel);
        grnDetailsPanel.setLayout(grnDetailsPanelLayout);
        grnDetailsPanelLayout.setHorizontalGroup(
            grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grnDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(grnDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(grnDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateGrnDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrandDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(grnDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrnReference, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnCodeSerach, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGrandSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(grnDetailsPanelLayout.createSequentialGroup()
                        .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDeliveredBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRemark))))
                .addContainerGap())
        );

        grnDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4});

        grnDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbSupplier, dateGrnDate, txtDeliveredBy, txtGrnReference});

        grnDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12});

        grnDetailsPanelLayout.setVerticalGroup(
            grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grnDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtGrnReference, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtGrandSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCodeSerach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dateGrnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGrandDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeliveredBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(grnDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        grnDetailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbSupplier, dateGrnDate, jLabel1, jLabel10, jLabel11, jLabel12, jLabel2, jLabel3, jLabel4, txtDeliveredBy, txtGrandDiscount, txtGrandSubTotal, txtGrandTotal, txtGrnReference, txtRemark});

        grnItemDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)), "GRN Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel6.setText("Item :");

        cmbItems.setEditable(true);
        cmbItems.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel7.setText("Quantity :");

        txtQuantity.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.00"))));
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtQuantity.setText("0.0");
        txtQuantity.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuantityFocusGained(evt);
            }
        });
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuantityKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel8.setText("Unit Price :");

        txtUnitPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.00"))));
        txtUnitPrice.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtUnitPrice.setText("0.0");
        txtUnitPrice.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtUnitPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUnitPriceFocusGained(evt);
            }
        });
        txtUnitPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUnitPriceKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabel9.setText("Discount :");

        txtDiscount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####.00"))));
        txtDiscount.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtDiscount.setText("0.0");
        txtDiscount.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtDiscount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDiscountFocusGained(evt);
            }
        });
        txtDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDiscountKeyPressed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(150, 255, 150));
        btnAdd.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnAdd.setContentAreaFilled(false);
        btnAdd.setOpaque(true);
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddMouseExited(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblUom.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblUom.setText("ML");

        javax.swing.GroupLayout grnItemDetailsPanelLayout = new javax.swing.GroupLayout(grnItemDetailsPanel);
        grnItemDetailsPanel.setLayout(grnItemDetailsPanelLayout);
        grnItemDetailsPanelLayout.setHorizontalGroup(
            grnItemDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grnItemDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbItems, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUom, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        grnItemDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDiscount, txtQuantity, txtUnitPrice});

        grnItemDetailsPanelLayout.setVerticalGroup(
            grnItemDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grnItemDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(grnItemDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnitPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUom))
                .addContainerGap())
        );

        grnItemDetailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, cmbItems, jLabel6, jLabel7, jLabel8, jLabel9, lblUom, txtDiscount, txtQuantity, txtUnitPrice});

        addedItemsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)), "Added Items", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 153, 0))); // NOI18N

        tblGrnItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Unit Price", "Quantity", "Discount", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane.setViewportView(tblGrnItems);
        if (tblGrnItems.getColumnModel().getColumnCount() > 0) {
            tblGrnItems.getColumnModel().getColumn(0).setResizable(false);
            tblGrnItems.getColumnModel().getColumn(1).setResizable(false);
            tblGrnItems.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblGrnItems.getColumnModel().getColumn(2).setResizable(false);
            tblGrnItems.getColumnModel().getColumn(3).setResizable(false);
            tblGrnItems.getColumnModel().getColumn(4).setResizable(false);
            tblGrnItems.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout addedItemsPanelLayout = new javax.swing.GroupLayout(addedItemsPanel);
        addedItemsPanel.setLayout(addedItemsPanelLayout);
        addedItemsPanelLayout.setHorizontalGroup(
            addedItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        addedItemsPanelLayout.setVerticalGroup(
            addedItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnSave.setBackground(new java.awt.Color(150, 255, 150));
        btnSave.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnSave.setContentAreaFilled(false);
        btnSave.setOpaque(true);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(150, 255, 150));
        btnClose.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnClose.setText("Close");
        btnClose.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnClose.setContentAreaFilled(false);
        btnClose.setOpaque(true);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(150, 255, 150));
        btnReset.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(50, 255, 50)));
        btnReset.setContentAreaFilled(false);
        btnReset.setOpaque(true);
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnResetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnResetMouseExited(evt);
            }
        });
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(grnDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(grnItemDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addedItemsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(grnDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grnItemDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addedItemsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnAddMouseEntered

    private void btnAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnAddMouseExited

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (!validateAddItemFields()) {
            InformationDialog.showMessageBox("Please insert valid details", "Invalid", this);
        } else {
            Session session = HibernateUtil.getSessionFactory().openSession();

            String itemName = cmbItems.getSelectedItem().toString().trim();
            float quantity = Float.parseFloat(txtQuantity.getText());
            float unitPrice = Float.parseFloat(txtUnitPrice.getText());
            float discount = Float.parseFloat(txtDiscount.getText());

            float itemTotal = (quantity * unitPrice) - discount;

            Item item = (Item) session.createCriteria(Item.class)
                    .add(Restrictions.eq("itemName", itemName))
                    .uniqueResult();

            DefaultTableModel tableModel = (DefaultTableModel) tblGrnItems.getModel();
            tableModel.addRow(new Object[]{item.getItemCode(), itemName, unitPrice, quantity, discount, itemTotal});

            this.grandSubTotal += (quantity * unitPrice);
            this.grandDiscount += discount;
            this.grandTotal = this.grandSubTotal - this.grandDiscount;

            this.txtGrandSubTotal.setText("" + this.grandSubTotal);
            this.txtGrandDiscount.setText("" + this.grandDiscount);
            this.txtGrandTotal.setText("" + this.grandTotal);

            session.close();
        }
        
        cmbItems.requestFocus();
        cmbItems.setSelectedIndex(0);
        txtQuantity.setText("0.0");
        txtUnitPrice.setText("0.0");
        txtDiscount.setText("0.0");
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (!validateSaveFields()) {
            InformationDialog.showMessageBox("Please insert valid details", "Invalid", this);
        } else {
            String strGrnReference = txtGrnReference.getText().trim();
            Grn grn = this.getGrnByReference(strGrnReference, true);
            if (grn == null) {
                ConfirmationDialog.showMessageBox("Create new GRN?", "New", this);
                if (ConfirmationDialog.option == ConfirmationDialog.YES_OPTION) {
                    KeyCodeFunctions keyCodeFunctions = new KeyCodeFunctions();
                    this.saveOrUpdateGrn(keyCodeFunctions.getKey("GRN", "Good receive note"), false);
                }
            } else {
                ConfirmationDialog.showMessageBox("Update existing GRN?", "Update", this);
                if (ConfirmationDialog.option == ConfirmationDialog.YES_OPTION) {
                    this.saveOrUpdateGrn(grn.getGrnCode(), true);
                }
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnCloseMouseEntered

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnCloseMouseExited

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        ConfirmationDialog.showMessageBox("Are you sure?", "Sure", this);
        if (ConfirmationDialog.option == ConfirmationDialog.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnResetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnResetMouseEntered

    private void btnResetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnResetMouseExited

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        this.clearAll();
    }//GEN-LAST:event_btnResetActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        Session session = HibernateUtil.getSessionFactory().openSession();

        Criteria businessPartnerCriteria = session.createCriteria(BusinessPartner.class)
                .add(Restrictions.eq("isSupplier", true))
                .addOrder(Order.asc("businessPartnerCode"));
        List<BusinessPartner> businessPartners = businessPartnerCriteria.list();
        if (!businessPartners.isEmpty()) {
            cmbSupplier.removeAllItems();
            cmbSupplier.addItem("");
            for (BusinessPartner businessPartner : businessPartners) {
                cmbSupplier.addItem(businessPartner.getFirstName() + " " + businessPartner.getLastName());
            }
        }

        Criteria itemCriteria = session.createCriteria(Item.class)
                .add(Restrictions.eq("isPhysical", 1))
                .addOrder(Order.asc("itemCode"));
        List<Item> items = itemCriteria.list();
        if (!items.isEmpty()) {
            cmbItems.removeAllItems();
            cmbItems.addItem("");
            for (Item item : items) {
                cmbItems.addItem(item.getItemName());
            }
        }

        AutoCompletion.enable(cmbSupplier, txtDeliveredBy);
        AutoCompletion.enable(cmbItems, txtUnitPrice);

        session.close();
    }//GEN-LAST:event_formInternalFrameOpened

    private void txtUnitPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnitPriceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtQuantity.requestFocus();
        }
    }//GEN-LAST:event_txtUnitPriceKeyPressed

    private void txtQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDiscount.requestFocus();
        }
    }//GEN-LAST:event_txtQuantityKeyPressed

    private void txtDiscountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAdd.requestFocus();
        }
    }//GEN-LAST:event_txtDiscountKeyPressed

    private void txtUnitPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUnitPriceFocusGained
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                Session session = HibernateUtil.getSessionFactory().openSession();
                Item item = (Item) session
                        .createCriteria(Item.class)
                        .add(Restrictions.eq("itemName", cmbItems.getSelectedItem().toString().trim()))
                        .uniqueResult();
                if (item != null) {
                    Uom uom = (Uom) session
                            .createCriteria(Uom.class)
                            .add(Restrictions.eq("uomCode", item.getUomByBuyingUom().getUomCode()))
                            .uniqueResult();
                    if (uom != null) {
                        lblUom.setText(uom.getUomSymble());
                    }
                }
                session.close();
                txtUnitPrice.selectAll();
            }
        });
    }//GEN-LAST:event_txtUnitPriceFocusGained

    private void txtQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantityFocusGained
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                txtQuantity.selectAll();
            }
        });
    }//GEN-LAST:event_txtQuantityFocusGained

    private void txtDiscountFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiscountFocusGained
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                txtDiscount.selectAll();
            }
        });
    }//GEN-LAST:event_txtDiscountFocusGained

    private void btnCodeSerachMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCodeSerachMouseEntered
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_ENTER_COLOR);
    }//GEN-LAST:event_btnCodeSerachMouseEntered

    private void btnCodeSerachMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCodeSerachMouseExited
        ButtonFunctions.changeBackgroundColor(evt.getSource(), SystemData.MOUSE_EXIT_COLOR);
    }//GEN-LAST:event_btnCodeSerachMouseExited

    private void btnCodeSerachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodeSerachActionPerformed

    }//GEN-LAST:event_btnCodeSerachActionPerformed

    private boolean validateAddItemFields() {
        return !(((String) cmbItems.getSelectedItem()).isEmpty() || txtQuantity.getText().equalsIgnoreCase("0.0") || txtUnitPrice.getText().equalsIgnoreCase("0.0"));
    }

    private boolean validateSaveFields() {
        return !(tblGrnItems.getRowCount() == 0
                || txtGrnReference.getText().isEmpty()
                || cmbSupplier.getSelectedItem().toString().isEmpty()
                || txtDeliveredBy.getText().isEmpty());
    }

    private void saveOrUpdateGrn(String strGrnCode, boolean bUpdate) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        Transaction transaction = session.beginTransaction();

        Date date = new Date();

        BusinessPartner businessPartner = (BusinessPartner) session
                .createCriteria(BusinessPartner.class)
                .add(Restrictions.eq("firstName", cmbSupplier.getSelectedItem().toString().split(" ")[0].trim()))
                .add(Restrictions.eq("lastName", cmbSupplier.getSelectedItem().toString().split(" ")[1].trim()))
                .uniqueResult();

        Grn grn = new Grn();
        grn.setGrnCode(strGrnCode);
        grn.setBusinessPartner(businessPartner);
        grn.setGrnReference(txtGrnReference.getText().trim().toUpperCase());
        grn.setGrnTime(date);
        grn.setGrnDate(dateGrnDate.getDate());
        grn.setHandedOverBy(txtDeliveredBy.getText().trim().toUpperCase());
        grn.setBatch(new SimpleDateFormat("yyyyMMdd").format(dateGrnDate.getDate()) + "-" + txtGrnReference.getText().trim().toUpperCase());
        if (bUpdate) {
            grn.setModifiedDate(date);
            grn.setModifiedTime(date);
            grn.setModifiedUser(MainFrame.user.getUserId());
        } else {
            grn.setCreatedDate(date);
            grn.setCreatedTime(date);
            grn.setCreatedUser(MainFrame.user.getUserId());
        }
        grn.setRemark(txtRemark.getText().trim().toUpperCase());

        session.saveOrUpdate(grn);

        DefaultTableModel tableModel = (DefaultTableModel) tblGrnItems.getModel();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            Item item = (Item) session.createCriteria(Item.class)
                    .add(Restrictions.eq("itemCode", tblGrnItems.getValueAt(i, 0).toString()))
                    .uniqueResult();

            /**
             * Updating GRN Line for GRN reference
             */
            GrnLine grnLine = new GrnLine();
            grnLine.setUnitPrice(Float.parseFloat(tblGrnItems.getValueAt(i, 2).toString()));
            grnLine.setReceivedQuantity(Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()));
            grnLine.setDiscount(Float.parseFloat(tblGrnItems.getValueAt(i, 4).toString()));
            grnLine.setSubTotal((Float.parseFloat(tblGrnItems.getValueAt(i, 2).toString())
                    * Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()))
                    - Float.parseFloat(tblGrnItems.getValueAt(i, 4).toString())
            );
            grnLine.setCostPrice(((Float.parseFloat(tblGrnItems.getValueAt(i, 2).toString())
                    * Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()))
                    - Float.parseFloat(tblGrnItems.getValueAt(i, 4).toString()))
                    / Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()));
            if (bUpdate) {
                grnLine.setModifiedDate(date);
                grnLine.setModifiedTime(date);
                grnLine.setModifiedUser(MainFrame.user.getUserId());
            } else {
                grnLine.setCreatedDate(date);
                grnLine.setCreatedTime(date);
                grnLine.setCreatedUser(MainFrame.user.getUserId());
            }
            grnLine.setRemark("");
            grnLine.setGrn(grn);
            grnLine.setItem(item);

            session.saveOrUpdate(grnLine);

            /**
             * Update stock
             */
            Stock stock = new Stock();
            stock.setCostPrice(((Float.parseFloat(tblGrnItems.getValueAt(i, 2).toString())
                    * Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()))
                    - Float.parseFloat(tblGrnItems.getValueAt(i, 4).toString()))
                    / Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()));
            
            /**
             * Convert buying uom to selling uom
             */
            Uom buying = item.getUomByBuyingUom();
            Uom selling = item.getUomBySellingUom();
            if (buying != selling) {
                UomConversion uomConversion = (UomConversion) session
                        .createCriteria(UomConversion.class)
                        .add(Restrictions.eq("uomByUomUomCodeFrom", buying))
                        .add(Restrictions.eq("uomByUomUomCodeTo", selling))
                        .uniqueResult();
                if (uomConversion != null) {
                    float multipliedBY = uomConversion.getMultipliedBy();
                    stock.setQuantity(Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()) * multipliedBY);
                } else {
                    stock.setQuantity(Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()));
                }
            } else {
                stock.setQuantity(Float.parseFloat(tblGrnItems.getValueAt(i, 3).toString()));
            }

            if (bUpdate) {
                stock.setModifiedDate(date);
                stock.setModifiedTime(date);
                stock.setModifiedUser(MainFrame.user.getUserId());
            } else {
                stock.setCreatedDate(date);
                stock.setCreatedTime(date);
                stock.setCreatedUser(MainFrame.user.getUserId());
            }
            stock.setGrn(grn);
            stock.setStockStatus((StockStatus) session
                    .createCriteria(StockStatus.class)
                    .add(Restrictions.eq("stockStatusId", 1))
                    .uniqueResult());
            stock.setItem(item);
            
            session.saveOrUpdate(stock);
        }
        
        transaction.commit();
        session.close();
        
        if (bUpdate) {
            InformationDialog.showMessageBox(SystemData.RECORD_UPDATED_MESSAGE, SystemData.RECORD_UPDATED_HEADING, this);
        } else {
            InformationDialog.showMessageBox(SystemData.NEW_RECORD_ADDED_MESSAGE, SystemData.NEW_RECORD_ADDED_HEADING, this);
        }
        
        this.clearAll();
    }

    private Grn getGrnByReference(String grnReference, boolean like) {
        Session session = HibernateUtil.getSessionFactory().openSession();
        if (like) {
            return (Grn) session.createCriteria(Grn.class)
                    .add(Restrictions.like("grnReference", "%" + grnReference + "%"))
                    .uniqueResult();
        } else {
            return (Grn) session.createCriteria(Grn.class)
                    .add(Restrictions.eq("grnReference", grnReference))
                    .uniqueResult();
        }
    }

    private void clearAll() {
        txtGrnReference.setText("");
        dateGrnDate.setDate(new Date());
        cmbSupplier.setSelectedIndex(0);
        txtDeliveredBy.setText("");
        txtRemark.setText("");

        ((DefaultTableModel) tblGrnItems.getModel()).setRowCount(0);

        txtGrandSubTotal.setText("0.00");
        txtGrandDiscount.setText("0.00");
        txtGrandTotal.setText("0.00");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addedItemsPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCodeSerach;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbItems;
    private javax.swing.JComboBox<String> cmbSupplier;
    private com.toedter.calendar.JDateChooser dateGrnDate;
    private javax.swing.JPanel grnDetailsPanel;
    private javax.swing.JPanel grnItemDetailsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblUom;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblGrnItems;
    private javax.swing.JTextField txtDeliveredBy;
    private javax.swing.JFormattedTextField txtDiscount;
    private javax.swing.JFormattedTextField txtGrandDiscount;
    private javax.swing.JFormattedTextField txtGrandSubTotal;
    private javax.swing.JFormattedTextField txtGrandTotal;
    private javax.swing.JTextField txtGrnReference;
    private javax.swing.JFormattedTextField txtQuantity;
    private javax.swing.JTextField txtRemark;
    private javax.swing.JFormattedTextField txtUnitPrice;
    // End of variables declaration//GEN-END:variables
    float grandSubTotal = 0.0f;
    float grandDiscount = 0.0f;
    float grandTotal = 0.0f;
}
